{"version":3,"sources":["Images/logo.png","../node_modules/encoding/lib sync","Main/UserFunctions.js","Main/MainContent.js","Components/Section/MusicPlayer/MusicPlayer.js","Components/Section/Section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","keys","resolve","id","localhost","login","userLogin","axios","post","userName","password","then","response","undefined","data","token","error","localStorage","setItem","catch","err","setFavouriteByUser","userFavourite","albumIds","albumId","console","log","removeFavouriteByUser","userRemoveFavour","getFavouriteTracksByUser","userDet","get","params","getProfileDetails","setProfileDetails","user","changedUsername","changedPassword","email","res","getItem","getAllTracksByAlbumId","val","body","register","firstName","lastName","profile_img","MainContent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleActive","setState","isLogin","userRegister","preventDefault","state","preview_img","image2base64","toast","position","POSITION","TOP_RIGHT","status","success","updateValue","defineProperty","target","name","value","onFilesChange","files","length","preview","url","notifyError","userDetails","isUserActive","_this2","activeLogStyle","background","color","registerLogStyle","react_default","a","createElement","className","onClick","style","onSubmit","htmlFor","type","placeholder","onChange","autoComplete","required","src","alt","dist_default","onError","onFilesError","accepts","multiple","maxFiles","maxFileSize","minFileSize","clickable","Component","MusicPlayer","componentDidMount","songData","songControls","option","song","songSrc","play","volume","isPlaying","pause","setVolume","vol","setFav","fav","isFavourite","timeUpdate","setInterval","currentTime","totalTime","addPlayListToPlayer","artist","cover","musicSrc","obj","singer","setPlayList","setSongsList","isMuted","Audio","track_url","track_title","album_title","bind","artist_name","track_image_file","aria-hidden","data-toggle","href","connect","musicPlayListReducer","dispatch","setCurrent","payload","playList","b64toBlob","require","Home","Section_Album","Section_Favourite","Album","createAlbumActive","isAlbumCreate","createAlbum","albumObj","albumCopy","albumData","slice","count","i","title","albumName","albumImg","description","albumDesc","songs","push","setAlbumTitle","index","albumTitle","currentCard","cardStyle","transform","width","isDataAlive","createShown","display","mainPageShown","Section_CreateAlbum","react_router_dom","to","Section_Card","CreateAlbum","_this3","updateAlbumDetails","Card","_this4","userFavouriteTracks","$","document","ready","click","getTracks","album_id","dataset","tracksData","isSongsShown","toggleFavourite","trackId","eq","getFavouriteHandler","userTracksArr","indexOf","removeFavour","assertThisInitialized","setFavour","favouriteCount","_this5","albumcardStyle","flexWrap","window","location","includes","cardData","Section_Songs","map","key","album_image_file","album_tracks","Songs","_this6","songsData","Section_MusicPlayer_MusicPlayer","AllCards","Favourite","_this7","userAlbumList","filter","arr","userFavouriteList","userFavouriteTrackList","Profile","_this8","b64Data","blob","blobUrl","URL","createObjectURL","_this8$setState","togglePassword","isPasswordChange","changeUserDetails","currentPassword","userObj","isChanged","disabled","Section","_this9","logout","clear","loginUser","audioLists","Promise","data-target","react_router","exact","from","path","render","Section_Home","Section_AllCards","Section_Profile","App","configure","autoClose","onAudioListsChange","currentPlayId","audioInfo","autoPlay","react_toastify","logo","Components_Section_Section","src_Main_MainContent","songsList","isSongs","lib_default","panelTitle","playIndex","defaultPosition","top","left","draggable","bounds","Boolean","hostname","match","store","createStore","combineReducers","arguments","currentPlaying","lastPlayed","defaultPlayIndex","action","objectSpread","concat","toConsumableArray","applyMiddleware","next","subscribe","getState","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.1c689872.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.806430aa.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 323;","import axios from 'axios'\nconst localhost = \"http://localhost:5000\";\n//\n// const MongoClient = require('mongodb').MongoClient;\n// const uri = \"mongodb+srv://codingmart42:<password>@musichunt01-4ybzp.mongodb.net/test?retryWrites=true&w=majority\";\n// const client = new MongoClient(uri, { useNewUrlParser: true });\n// client.connect(err => {\n//   const collection = client.db(\"test\").collection(\"devices\");\n//   // perform actions on the collection object\n//   client.close();\n// });\n\n\nexport const login = (userLogin) => {\n  return axios.post(localhost+'/users/login',{\n      userName : userLogin.userName,\n      password : userLogin.password\n  }).then(response => {\n      if(response.data.token!==undefined){\n        if(response.data.error===undefined){\n            localStorage.setItem(\"musicHunt\", response.data.token);\n        }\n      }\n      return response.data\n  }).catch(err=>{\n      return err\n  })\n}\n\n\nexport const setFavouriteByUser = (userFavourite) => {\n  return axios.post(localhost+'/tracks/setFavouriteByUser',{\n      userName : userFavourite.userName,\n      albumIds : userFavourite.albumId\n  }).then(response => {\n      if(response.data!==undefined){\n        if(response.data.error===undefined){\n            console.log(\"Got\");\n        }\n      }\n      return response.data\n  }).catch(err=>{\n      return err\n  })\n}\n\nexport const removeFavouriteByUser = (userRemoveFavour) => {\n  console.log(userRemoveFavour);\n  return axios.post(localhost + '/tracks/removeFavouriteByUser',{\n    userName : userRemoveFavour.userName,\n    albumId : userRemoveFavour.albumId\n  }).then(response => {\n    console.log(response);\n  })\n}\n\n\nexport const albumsList = ()=>{\n  return axios.get(localhost+'/albums/getAllAlbums').then(response=>{\n      if(response.data===undefined || response.data===null){\n        return \"Server Down\"\n      }\n      else{\n        return response.data.slice(1,10);\n      }\n  })\n}\n\n\nexport const getFavouriteTracksByUser = (userDet) => {\n  return axios.get(localhost + '/tracks/getFavouriteByUser', {\n    params : {\n      userName : userDet.userName\n    }\n  }).then(response => {\n      return response.data;\n  })\n}\n\nexport const getProfileDetails = (userDet) => {\n  return axios.get(localhost+'/users/profile', {\n    params : {\n      userName : userDet\n    }\n  }).then(response => {\n    return response.data\n  })\n}\n\nexport const setProfileDetails = (user) => {\n  return axios.post(localhost+ '/users/setProfileDetails',{\n    userName : user.userName,\n    changedUsername : user.changedUsername,\n    changedPassword : user.changedPassword!==undefined ? user.changedPassword : \"\",\n    email : user.email\n  }).then(res => {\n    localStorage.getItem(\"musicHuntUser\", user.changedUsername);\n    return res;\n  })\n}\n\nexport const getAllTracksByAlbumId = (val)=> {\n  return axios.get(localhost + '/getAllTracksByAlbumId',{\n    params: {\n      albumId : val\n    }\n  }).then(response => {\n      if(response.data.body===undefined || response.data.body===null){\n        return \"Server Down\"\n      }\n      else{\n        return response.data.body;\n      }\n  })\n}\n\nexport const register = (user) => {\n  return axios.post(localhost+'/users/register', {\n    firstName : user.firstName,\n    lastName : user.lastName,\n    userName  : user.userName,\n    email : user.email,\n    password : user.password,\n    profile_img : user.profile_img\n  }).then((response)=>{\n     return response\n  })\n}\n\n\nexport const getFavouriteByTrackId = (trackId) => {\n  return axios.get(localhost +'/getFavouriteByTrackId', {\n    params : {\n      trackId : trackId\n    }\n  }).then(response => {\n      if(response.data.body===undefined || response.data.body===null){\n        return \"Server Down\"\n      }\n      else{\n        return response.data.body;\n      }\n  })\n}\n\n//\n// export const albums = ()=> {\n//   return axios.get(\"https://musichunt-699ba.firebaseio.com/albums.json\").then((response)=>{\n//       return response;\n//   })\n// }\n//\n// export const putAlbums = (data)=> {\n//   return axios.put(\"https://musichunt-699ba.firebaseio.com/albums.json\",data).then((response)=>{\n//       return response;\n//   })\n// }\n\n// export const getTracks = ()=> {\n//   return axios.get(\"http://localhost:5000/allTracks\").then((response)=>{\n//     return response.data.name.body.dataset;\n//   })\n// }\n","import React , { Component } from 'react';\nimport './MainContent.css'\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { login } from './UserFunctions'\nimport {register} from './UserFunctions';\nimport { toast } from 'react-toastify';\nimport Files from 'react-files';\n// import $ from 'jquery';\nimport image2base64 from 'image-to-base64';\n\nclass MainContent extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isUserActive : false,\n      isLogin : true,\n      firstName : \"\",\n      lastName : \"\",\n      userName : \"\",\n      password : \"\",\n      email : \"\",\n      profile_img : \"\",\n      preview_img : \"\",\n      error : \"\"\n    }\n  }\n\n  toggleActive = (val)=> {\n    if(val === \"login\"){\n      this.setState({isLogin : true});\n    }\n    else{\n      this.setState({isLogin : false});\n    }\n  }\n\n\n\n\n  userRegister = (e)=> {\n      e.preventDefault();\n      if(this.state.preview_img!==\"\"){\n          image2base64(this.state.preview_img).then(response => {\n            const user = {\n              firstName : this.state.firstName,\n              lastName : this.state.lastName,\n              userName : this.state.userName,\n              email : this.state.email,\n              password : this.state.password,\n              profile_img : response\n            }\n            register(user).then((res)=> {\n              if(res.data.error!==undefined){\n                toast.error(\"Username Already Exists\", {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n              }\n              if(res.data.status!==undefined){\n                  toast.success(\"Registered Successfully Login To Continue\", {\n                      position: toast.POSITION.TOP_RIGHT\n                  });\n                  this.setState({isLogin : true});\n              }\n            })\n          })\n        }\n        else{\n            this.setState({error : \"Please Upload Image\"});\n        }\n  }\n\n  updateValue = (e)=> {\n    this.setState({[e.target.name] : e.target.value});\n  }\n\n  onFilesChange =  (files) => {\n     console.log(files[files.length-1]) ;\n     this.setState({preview_img : files[files.length-1].preview.url});\n  }\n\n  userLogin = (e)=>{\n    e.preventDefault();\n\n    const userDet = {\n      userName : this.state.userName,\n      password : this.state.password\n    }\n\n    login(userDet).then(res => {\n      if(res===undefined){\n        this.notifyError();\n      }\n      else if(res.error!==undefined){\n        toast.error(res.error, {\n            position: toast.POSITION.TOP_RIGHT\n        });\n      }\n      else{\n        console.log(res.userDetails);\n        localStorage.setItem(\"musicHuntUser\", res.userDetails.userName);\n        localStorage.setItem(\"musicHuntUserProfile\", res.userDetails.profile_img);\n        this.setState({isUserActive : true});\n      }\n    })\n\n  }\n\n  notifyError = ()=> {\n    toast.error(\"Invalid Login\", {\n        position: toast.POSITION.TOP_RIGHT\n    });\n  }\n  render(){\n      let activeLogStyle = {\n        background : this.state.isLogin ? \"#777\" : \"\",\n        color : this.state.isLogin ? \"white\" : \"black\"\n      }\n      let registerLogStyle = {\n        background : this.state.isLogin? \"\" : \"#777\",\n        color : this.state.isLogin ? \"black\" : \"white\"\n      }\n        return(\n          <div className=\"app-main\">\n          <div className=\"modal\" id=\"myModal\">\n              <div className=\"modal-dialog modal-dialog-centered\">\n                  <div className=\"modal-content\">\n                      <div className=\"modal-body\">\n                      <div className=\"container-fluid\">\n                        <div className=\"mx-auto\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-12\">\n                                     <div className=\"row text-center log-reg-btn\">\n                                         <div className=\"col\" onClick={()=>{this.toggleActive('login')}} style={activeLogStyle}>\n                                           Login\n                                         </div>\n                                         <div className=\"col\" onClick={()=>{this.toggleActive('register')}} style={registerLogStyle}>\n                                           SignUp\n                                         </div>\n                                     </div>\n                                     <hr/>\n                                   </div>\n                                   {this.state.isLogin ?\n                                     <div className=\"login-main mx-auto\">\n                                       <form onSubmit={this.userLogin}>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"uname\">Username</label>\n                                                 <input type=\"text\" className=\"form-control\" id=\"uname\" placeholder=\"Enter username\" onChange={this.updateValue} name=\"userName\" autoComplete=\"current-username\" required />\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"pwd\">Password</label>\n                                                 <input type=\"password\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" onChange={this.updateValue} name=\"password\" autoComplete=\"new-password\" required />\n                                             </div>\n                                             <div className=\"form-group form-check form-inline\">\n                                                 <label className=\"form-check-label\">\n                                                   <input className=\"form-check-input\" type=\"checkbox\" name=\"remember\"/> Lazy to remember password\n                                                 </label>\n                                             </div>\n                                             <div className=\"form-group text-center\">\n                                               <button type=\"submit\" className=\"btn btn-primary\">LOGIN</button>\n                                             </div>\n                                       </form>\n                                     </div>:\n                                     <div className=\"signup-main mx-auto\">\n                                       <form onSubmit={this.userRegister}>\n                                              <div className=\"form-group row\">\n                                              {this.state.preview_img !== \"\" ?\n                                                <img src={this.state.preview_img} className=\"preview-img rounded-circle mx-auto\" alt=\"upload_image\"/>:\"\"\n                                              }\n                                              </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"fname\">First Name</label>\n                                                 <input type=\"text\" className=\"form-control ml-auto\" id=\"fname\" placeholder=\"Enter FirstName\" onChange={this.updateValue} name=\"firstName\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"lname\">LastName</label>\n                                                 <input type=\"text\" className=\"form-control ml-auto\" id=\"lname\" placeholder=\"Enter LastName\" onChange={this.updateValue} name=\"lastName\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"uname\">Username</label>\n                                                 <input type=\"text\" className=\"form-control ml-auto\" id=\"uname\" placeholder=\"Enter username\" onChange={this.updateValue} name=\"userName\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"email\">Email</label>\n                                                 <input type=\"email\" className=\"form-control ml-auto\" id=\"email\" placeholder=\"Enter Email\" onChange={this.updateValue} name=\"email\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"pwd\">Password</label>\n                                                 <input type=\"password\" className=\"form-control ml-auto\" id=\"pwd\" placeholder=\"Enter password\" onChange={this.updateValue} name=\"password\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"rpwd\">Confirm Password</label>\n                                                 <input type=\"password\" className=\"form-control ml-auto\" id=\"rpwd\" placeholder=\"Re enter password\" name=\"pswd\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                             <Files\n                                                  className='files-dropzone btn btn-primary'\n                                                  onChange={this.onFilesChange}\n                                                  onError={this.onFilesError}\n                                                  accepts={['image/*']}\n                                                  multiple\n                                                  maxFiles={3}\n                                                  maxFileSize={10000000}\n                                                  minFileSize={0}\n                                                  clickable\n                                              >\n                                                  Upload Photo\n                                              </Files>\n                                              <div>{this.state.error}</div>\n                                             </div>\n                                             <div className=\"form-group form-check form-inline\">\n                                                 <label className=\"form-check-label\">\n                                                   <input className=\"form-check-input\" type=\"checkbox\" name=\"remember\"/> Lazy to remember password\n                                                 </label>\n                                             </div>\n                                             <div className=\"form-group text-center\">\n                                               <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                                             </div>\n                                       </form>\n                                     </div>\n                                   }\n                              </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n          </div>\n        )\n  }\n}\n\nexport default MainContent;\n","import React , {Component} from 'react';\nimport { connect } from 'react-redux';\nclass MusicPlayer extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isPlaying : true,\n      currentTime : \"00:00\",\n      totalTime : \"00:00\",\n      isMuted : false,\n      isFavourite : false,\n      volume : \"1\",\n      songSrc : new Audio(this.props.songData.track_url+\"/download\")\n    }\n  }\n\n  componentDidMount = ()=>{\n    console.log(this.props.songData);\n  }\n  songControls = (option)=> {\n    console.log(\"playing\");\n    let song = this.state.songSrc;\n    switch(option){\n        case \"play\" :\n          song.play();\n          song.volume = this.state.volume;\n          this.setState({isPlaying : false});\n          break;\n        case \"pause\":\n          song.pause();\n          this.setState({isPlaying : true});\n          break;\n        case \"fav\":\n          break;\n        case \"unfav\":\n        default :\n    }\n  }\n\n  setVolume = (vol)=> {\n      let song = this.state.songSrc;\n      song.volume = vol;\n      this.setState({volume : vol});\n  }\n  setFav = (fav)=> {\n      if(fav===\"fav\"){\n        this.setState({isFavourite : true});\n      }\n      else{\n          this.setState({isFavourite : false});\n      }\n  }\n  timeUpdate = ()=>{\n      setInterval(()=>{\n          if(this.currentTime < this.totalTime){\n            this.setState({currentTime : this.state.currentTime+1});\n          }\n      },1000)\n  }\n  addPlayListToPlayer = (name, artist, cover, musicSrc) =>{\n      let obj = {\n        name : name,\n        singer : artist,\n        cover : cover,\n        musicSrc :  musicSrc+\"/download\"\n      }\n      this.props.setPlayList(obj);\n  }\n  play = (name, artist, cover, musicSrc) => {\n    let obj = {\n      name : name,\n      singer : artist,\n      cover : cover,\n      musicSrc :  musicSrc+\"/download\"\n    }\n    this.props.setSongsList(obj);\n  }\n  render(){\n    return(\n      <div className=\"row music-player\">\n        {/*<div className=\"col\"><img className=\"music-img\" src={this.props.songData.track_image_file} alt=\"img\"/></div>*/}\n        <div className=\"col\">{this.props.songData.track_title}</div>\n        <div className=\"col\">{this.props.songData.album_title}</div>\n        <div className=\"col\" onClick={this.play.bind(this,this.props.songData.track_title,\n                                                   this.props.songData.artist_name,\n                                                   this.props.songData.track_image_file,\n                                                   this.props.songData.track_url)}><i className=\"fa fa-play\" aria-hidden=\"true\"></i>\n        </div>          \n          <div className=\"col\">\n              <div className=\"dropdown\">\n                  <div data-toggle=\"dropdown\">\n                    <i className=\"fa fa-ellipsis-v\"></i>\n                  </div>\n                  <div className=\"dropdown-menu\">\n                    <a className=\"dropdown-item\" href=\"javascript:void(0)\" onClick={this.addPlayListToPlayer.bind(this,this.props.songData.track_title,\n                                                               this.props.songData.artist_name,\n                                                               this.props.songData.track_image_file,\n                                                               this.props.songData.track_url)}>\n                        Add To PlayList\n                    </a>\n                  </div>\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return{\n    musicPlayListReducer : state.musicPlayListReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    setCurrent : (val) => {\n      dispatch({\n          type : 'SET_CURRENT',\n          payload : val\n      });\n    },\n    setPlayList : (playList) => {\n      dispatch({\n        type : 'SET_PLAYLIST',\n        payload : playList\n      })\n    },\n    setSongsList : (song) => {\n      dispatch({\n        type : 'SET_SONGSLIST',\n        payload : song\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MusicPlayer);\n","import React , {Component} from 'react';\nimport './Section.css';\nimport $ from 'jquery';\nimport { albumsList } from '../../Main/UserFunctions';\nimport { getAllTracksByAlbumId } from '../../Main/UserFunctions';\n// import { getFavouriteByTrackId }  from '../../Main/UserFunctions';\nimport { getFavouriteTracksByUser } from '../../Main/UserFunctions';\nimport { setFavouriteByUser } from '../../Main/UserFunctions';\nimport { removeFavouriteByUser } from '../../Main/UserFunctions';\nimport { getProfileDetails } from '../../Main/UserFunctions';\nimport { setProfileDetails } from '../../Main/UserFunctions';\n\n// import { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport Files from 'react-files'\nimport MusicPlayer from './MusicPlayer/MusicPlayer'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Link,\n    Redirect\n  } from 'react-router-dom';\nconst b64toBlob = require('b64-to-blob');\n\nclass Home extends Component{\n    render(){\n        return(\n            <div className=\"home\">\n                <Album/>\n                {/*<Recent/>*/}\n                <Favourite/>\n            </div>\n        )\n    }\n}\n\nclass Album extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          currentCard: 0,\n          position: 0,\n          cardStyle: {\n            transform: 'translateX(0px)'\n          },\n          width: 0,\n          albumData : [],\n          isAlbumCreate : false,\n          isDataAlive : false,\n          albumTitle  : \"Albums\"\n        };\n      }\n\n      componentDidMount() {\n        albumsList().then(response => {\n          console.log(response);\n          if(response===undefined){\n            console.log(\"server unavailable\");\n          }\n          else{\n            this.setState({albumData : response, isDataAlive : true});\n          }\n        })\n      }\n\n      createAlbumActive = ()=>{\n          this.setState({isAlbumCreate : true});\n      }\n\n      createAlbum = (albumObj)=> {\n        let albumCopy = this.state.albumData.slice();\n        let count = 0;\n        for(let i=0; i<albumCopy.length; i++){\n            if(albumCopy[i].title === albumObj.albumName){\n              count++;\n            }\n        }\n        if(count)\n        var obj = {\n          albumImg : \"\",\n          description : albumObj.albumDesc,\n          songs : [],\n          title : albumObj.albumName\n        }\n        albumCopy.push(obj);\n        // putAlbums(albumCopy).then(()=>{\n            this.setState({albumData : albumCopy, isAlbumCreate : false});\n        // })\n      }\n      setAlbumTitle = (index) => {\n          this.setState({albumTitle : this.state.albumData[index].album_title});\n      }\n\n    render(){\n        let createShown = {\n          display : this.props.albumTitle ===\"Albums\"?\"block\":\"none\"\n        }\n        let mainPageShown = {\n          display : this.state.isDataAlive ? \"block\" : \"none\"\n        }\n        if(!this.state.isAlbumCreate){\n            return(\n                <div className=\"album container-fluid\" style={mainPageShown}>\n                    <div className=\"cards-slider row\">\n                        <div className=\"col-md-9\"><h3><Link to=\"/\">{this.props.title!==undefined?this.props.title : \"Album\"}</Link>{this.state.albumTitle!==\"Albums\"?<span>&nbsp;&#x3e;&nbsp;{this.state.albumTitle}</span>:\"\"}</h3></div>\n                          <div className=\"btn btn-success create-albm-btn\" style={createShown} onClick={this.createAlbumActive}>Create Album</div>\n                      {/*    <div className=\"ml-auto\">\n                            <div className=\"row\">\n                                <div className=\"arrow-btn\">\n                                    <div className=\"btn btn-sm btn-outline-secondary btn-arrow-left\" onClick={() => this.handleClick('prev')}><span>&lt;</span></div>\n                                </div>\n                                <div className=\"col-md-1 arrow-btn\">\n                                    <div className=\"btn btn-sm btn-outline-secondary btn-arrow-right\" onClick={() => this.handleClick('next')}><span>&gt;</span></div>\n                                </div>\n                            </div>\n                          </div> */}\n                    </div>\n                    <hr className=\"album-hr\"/>\n                    <div className=\"album-content\">\n                        <Card cardStyle={this.state.cardStyle} albumData={this.state.albumData} albumTitle={this.setAlbumTitle}/>\n                    </div>\n                </div>\n            )\n          }\n          else{\n            return <CreateAlbum createAlbum={this.createAlbum}/>\n          }\n    }\n}\n\nclass CreateAlbum extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      albumName : \"\",\n      albumDesc : \"\",\n      albumImg : \"\",\n      songs : []\n    }\n  }\n\n  updateAlbumDetails = (e)=>{\n    this.setState({[e.target.name] : e.target.value});\n  }\n\n  render(){\n    return(\n      <div className=\"create-album-main container\">\n      <h2>Create Your Album </h2>\n      <hr/>\n        <div className=\"row\">\n              <div className=\"col\">\n                <form>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <label htmlFor=\"abmName\">Name</label>\n                            <input type=\"text\" className=\"form-control ml-auto\" id=\"abmName\" placeholder=\"Enter Album Name\" onChange={this.updateAlbumDetails} name=\"albumName\" autoComplete=\"current-username\" required />\n                        </div>\n                        <div className=\"col ml-auto\">\n                            <label htmlFor=\"abmDesc\">Description</label>\n                            <input type=\"text\" className=\"form-control ml-auto\" id=\"abmName\" placeholder=\"Enter Album Name\" onChange={this.updateAlbumDetails} name=\"albumDesc\" autoComplete=\"current-username\" required />\n                        </div>\n                    </div>\n                    <div className=\"form-group text-center create-abm-upload\">\n                        <Files\n                            className='files-dropzone album-img-upload btn btn-primary btn-sm'\n                            // onChange={this.onFilesChange}\n                            // onError={this.onFilesError}\n                            accepts={['image/*']}\n                            multiple\n                            maxFiles={10}\n                            maxFileSize={10000000}\n                            minFileSize={0}\n                            clickable\n                        >\n                            Upload Album Cover\n                        </Files>\n                      </div>\n                      <div className=\"form-group text-center create-abm-upload\">\n                          <Files\n                              className='files-dropzone album-songs-upload btn btn-primary btn-sm'\n                              // onChange={this.onFilesChange}\n                              // onError={this.onFilesError}\n                              accepts={['audio/*']}\n                              multiple\n                              maxFiles={10}\n                              maxFileSize={10000000}\n                              minFileSize={0}\n                              clickable\n                          >\n                              Upload Songs\n                          </Files>\n                      </div>\n                      <div className=\"btn btn-sm btn-outline-success\" onClick={this.props.createAlbum.bind(this,this.state)}>Create</div>\n                </form>\n            </div>\n            <div className=\"col\">\n                uploaded image and songs will display here\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Card extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n          tracksData : [],\n          isSongsShown : false,\n          isFavourite : false,\n          favouriteCount : 0,\n          userFavouriteTracks : []\n        }\n    }\n   componentDidMount = ()=>{\n      let user = localStorage.getItem(\"musicHuntUser\");\n      if(user!==undefined && user !== null){\n        getFavouriteTracksByUser({\n            userName : user\n        }).then(response=>{\n            if(response.albumId!==undefined && response.albumId!==null){\n                this.setState({userFavouriteTracks : response.albumId});\n            }\n        })\n      }\n      $(document).ready(function(){\n        $(\"#icon-click\").click(function(){\n          console.log(\"clicked\");\n        })\n      })\n    }\n\n    getTracks = (index)=>{\n        getAllTracksByAlbumId(this.props.albumData[index].album_id).then(response => {\n              if(response.dataset===undefined){\n                  console.log(\"server unavailable\");\n              }\n              else{\n                this.props.albumTitle(index);\n                this.setState({tracksData : response.dataset,isSongsShown : true});\n              }\n        })\n    }\n\n    toggleFavourite = (type,index,  trackId) => {\n      console.log(type);\n        if(type ===\"add\"){\n          console.log($(\".add-favourite\").eq(index));\n          this.setState({isFavourite : true});\n        }\n        else{\n          console.log(type + trackId);\n          this.setState({isFavourite : false});\n        }\n    }\n\n\n\n    getFavouriteHandler = (index,albumId) => {\n      let user = localStorage.getItem(\"musicHuntUser\");\n      let userTracksArr = this.state.userFavouriteTracks;\n      if(user!==undefined && userTracksArr!==null && userTracksArr!==undefined){\n          let index = userTracksArr.indexOf(albumId);\n          if(index!==-1){\n            return(\n                <span className=\"icon-click\" id=\"icon-click\">\n                <i className=\"fa fa-heart add-favourite\" onClick={this.removeFavour.bind(this,index,albumId)} title=\"Remove to favourite\"></i>\n                </span>\n            )\n          }\n          else{\n              return(\n                <span className=\"icon-click\">\n                 <i className=\"fa fa-heart-o add-favourite add-album\" onClick={this.setFavour.bind(this,index,albumId)} title=\"Add to favourite\"></i>\n                </span>\n              )\n          }\n      }\n    }\n\n    setFavour = (index,albumId)=> {\n      let user = localStorage.getItem(\"musicHuntUser\")\n      if(user!==null && user!==undefined){\n          let obj = {\n            userName : user,\n            albumId :albumId\n          }\n          setFavouriteByUser(obj).then(response=> {\n            console.log(response);\n          })\n      }\n    }\n\n    removeFavour = (index, albumId) => {\n      let user = localStorage.getItem(\"musicHuntUser\")\n      if(user!==null && user!==undefined){\n          let obj = {\n            userName : user,\n            albumId : albumId\n          }\n          removeFavouriteByUser(obj).then(response => {\n            console.log(response);\n          })\n      }\n    }\n\n    render(){\n      let albumcardStyle = {\n        flexWrap: window.location.href.includes(\"album\") ? \"none\"  :\"nowrap\",\n      }\n        const cardData = this.props.albumData;\n        if(this.state.isSongsShown){\n          return (\n            <Songs tracksData = {this.state.tracksData}/>\n          )\n        }\n        else{\n            return(\n                <div className=\"album-card text-center row\" style={albumcardStyle}>\n                 {cardData.map((val, index)=>{\n                     return(\n                        <div className=\"card col-md-3\" id=\"card\" style={this.props.cardStyle} key={index}>\n                          <div className=\"row\" onClick={this.getTracks.bind(this,index)}>\n                            <img src={val.album_image_file} className=\"card-img-top mx-auto img-thumbnail\" alt=\"...\"/>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\"><b>Title  :</b> {val.album_title}</h5>\n                                <span><b>Tracks : </b>{val.album_tracks}</span>\n                            </div>\n                            </div>\n                            <div className=\"row pull-right card-fa-heart\">\n                              {this.getFavouriteHandler(index,val.album_id)}\n                            </div>\n                        </div>\n                     )\n                   })}\n                 </div>\n            )\n          }\n        }\n}\n\nclass Songs extends Component{\n  constructor(props){\n      super();\n      this.state = {\n          songsData : []\n      }\n  }\n  componentDidMount = ()=> {\n    if(this.props.tracksData===undefined){\n\n    }\n    else{\n      this.setState({songsData : this.props.tracksData});\n    }\n  }\n  render(){\n    return(\n      <div className=\"song-content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h4>{this.props.title!==undefined ? this.props.title : \"SONGS\"}</h4>\n            </div>\n            <div className=\"col-md-2 mr-auto\">\n              <h5>{this.state.songsData.length} Songs</h5>\n            </div>\n          </div>\n          <hr/>\n          <div className=\"row text-center song-header\">\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n          </div>\n          <div className=\"row\">\n          <div className=\"col-md-3 ml-auto\">\n          {this.props.tracksData[0] !== undefined ?\n              <img src={this.props.tracksData[0].track_image_file} className=\"img-thumbnail\" alt=\"Album Image 1\" />:\"\"\n            }\n          </div>\n            <div className=\"col-md-9\">\n              {this.state.songsData.map((song, index)=>{\n                  return(\n                      <MusicPlayer songData={song} index={index} key={index}/>\n                  )\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AllCards extends Component{\n    render(){\n        return(\n            <div className=\"allCards\"></div>\n        )\n    }\n}\n\nclass Favourite extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      userFavouriteList : [],\n      userFavouriteTrackList : []\n    }\n  }\n  componentDidMount = () => {\n    let user = localStorage.getItem(\"musicHuntUser\");\n    let userAlbumList = [];\n    // let tracksList = this.state.userFavouriteTrackList;\n    if(user!==null && user !== undefined){\n        getFavouriteTracksByUser({\n          userName : user\n        }).then(response => {\n          if(response.albumId!==null && response.albumId!==undefined){\n              response.albumId.filter(function(value, index, arr){\n                  getAllTracksByAlbumId(value).then(response=>{\n                      if(response.dataset!==null && response.dataset!== undefined){\n                        response.dataset.filter(function(value, index, arr){\n                            userAlbumList.push(value);\n                        })\n                      }\n                  })\n              })\n              console.log(userAlbumList);\n          }\n        })\n        this.setState({userFavouriteList : userAlbumList})\n    }\n  }\n    render(){\n        return(\n            <div className=\"favourites\">\n            {/*this.state.userFavouriteList.length}\n                {this.state.userFavouriteList.map((val, index) => {\n                  return (\n                    <MusicPlayer song={val} key={index}/>\n                  )\n                })*/}\n                <Album title=\"Favourites\"/>\n            </div>\n        )\n    }\n}\n\n{/*class Recent extends Component{\n    render(){\n        return(\n            <div className=\"recent\">\n                <Album/>\n            </div>\n        )\n    }\n}*/}\n\nclass Profile extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      firstName : \"\",\n      lastName : \"\",\n      userName : \"\",\n      email : \"\",\n      password  :\"\",\n      profile_img : \"\",\n      isChanged : true,\n      isPasswordChange : false,\n      currentPassword : \"\",\n      changedPassword : \"\"\n    }\n  }\n\n  componentDidMount = ()=> {\n      let user = localStorage.getItem(\"musicHuntUser\");\n      if(user!==null && user!==undefined){\n        getProfileDetails(user).then(response => {\n          let obj = {\n            firstName : response.firstName,\n            lastName : response.lastName,\n            userName : response.userName,\n            email : response.email,\n            password : response.password,\n            profile_img : localStorage.getItem(\"musicHuntUserProfile\")!==\"undefined\" && localStorage.getItem(\"musicHuntUserProfile\")!==undefined ? localStorage.getItem(\"musicHuntUserProfile\") : \"\"\n          }\n            let contentType = 'image/jpg';\n            let b64Data = localStorage.getItem(\"musicHuntUserProfile\")!==\"undefined\" && localStorage.getItem(\"musicHuntUserProfile\")!==undefined ?localStorage.getItem(\"musicHuntUserProfile\") : \"\";\n            let blob = b64toBlob(b64Data, contentType);\n            let blobUrl = URL.createObjectURL(blob);\n            this.setState({\n              firstName : obj.firstName,\n              lastName : obj.lastName,\n              userName : obj.userName,\n              email : obj.email,\n              profile_img : blobUrl\n            });\n        })\n      }\n  }\n\n  onChange = (e) => {\n    this.setState({[e.target.name] : e.target.value, isChanged : false});\n  }\n\n    togglePassword = () => {\n        this.setState({isPasswordChange : true})\n    }\n\n    changeUserDetails = ()=> {\n      if(this.state.isPasswordChange){\n          let currentpass = this.state.currentPassword;\n          let changedpass = this.state.changedPassword;\n          let userObj = {\n            userName : localStorage.getItem(\"musicHuntUser\")!==\"undefined\"&& localStorage.getItem(\"musicHuntUser\")!==undefined ? localStorage.getItem(\"musicHuntUser\") : this.state.userName,\n            changedUsername : this.state.userName,\n            changedPassword : this.state.changedPassword,\n            email : this.state.email\n          }\n          setProfileDetails(userObj).then(res => {\n            console.log(res);\n          })\n      }\n      else{\n        let userObj = {\n          userName : localStorage.getItem(\"musicHuntUser\")!==\"undefined\"&& localStorage.getItem(\"musicHuntUser\")!==undefined ? localStorage.getItem(\"musicHuntUser\") : this.state.userName,\n          changedUsername : this.state.userName,\n          email : this.state.email\n        }\n        setProfileDetails(userObj).then(res => {\n          console.log(res);\n        })\n      }\n    }\n    render(){\n        return(\n            <div className=\"profile\">\n              <form>\n                <div className=\"form-group\">\n                {localStorage.getItem(\"musicHuntUserProfile\")!==\"undefined\" && localStorage.getItem(\"musicHuntUserProfile\")!==undefined?\n                    <img src={this.state.profile_img} alt=\"Profile\"/>:\"\"\n                }\n                </div>\n                <div className=\"form-group form-inline\">\n                  <label htmlFor=\"firstname\">First Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"firstname\" name=\"firstName\" onChange={this.onChange.bind(this)} value={this.state.firstName} disabled/>\n                </div>\n                <div className=\"form-group form-inline\">\n                  <label htmlFor=\"lastname\">Last Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lastname\" name=\"lastName\" onChange={this.onChange.bind(this)} value={this.state.lastName} disabled/>\n                </div>\n                <div className=\"form-group form-inline\">\n                  <label htmlFor=\"username\">User Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"username\" name=\"userName\" onChange={this.onChange.bind(this)} value={this.state.userName}/>\n                </div>\n                <div className=\"form-group form-inline\">\n                  <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                  <input type=\"email\" className=\"form-control\" id=\"email\" onChange={this.onChange.bind(this)} value={this.state.email}  placeholder=\"Enter email\"/>\n                </div>\n                <div className=\"btn btn-primary\" onClick={this.togglePassword}>Change Password</div>\n                {this.state.isPasswordChange ?\n                    <div>\n                      <div className=\"form-group form-inline\">\n                        <label>Current Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"currentPassword\" onChange={this.onChange.bind(this)} value={this.state.currentPassword}/>\n                      </div>\n                      <div className=\"form-group form-inline\">\n                        <label>Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"changedPassword\" onChange={this.onChange.bind(this)} value={this.state.changedPassword}/>\n                      </div>\n                    </div>:\"\"\n                  }\n                <input type=\"button\" className=\"btn btn-success\" onClick={this.changeUserDetails} disabled={this.state.isChanged} value=\"Save Changes\"/>\n              </form>\n            </div>\n        )\n    }\n}\n\nclass Section extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isUserActive : false,\n            audioLists : [\n            {\n              name : \"First song 1\",\n              singer : \"Madhan\",\n              cover : \"https://freemusicarchive.org/file/images/tracks/Track_-_20110118110252018\",\n              musicSrc :\"http://freemusicarchive.org/music/Broke_For_Free/Directionless_EP/Broke_For_Free_-_Directionless_EP_-_01_Night_Owl/download\"\n            },\n            {\n              name : \"First song\",\n              singer : \"Madhan\",\n              cover : \"https://freemusicarchive.org/file/images/tracks/Track_-_20110118110252018\",\n              musicSrc : () => {\n                return Promise.resolve(\"http://freemusicarchive.org/music/Broke_For_Free/Directionless_EP/Broke_For_Free_-_Directionless_EP_-_01_Night_Owl/download\")\n              }\n            }\n          ]\n        }\n    }\n\n    componentDidMount = ()=> {\n      if(localStorage.getItem(\"musicHunt\") !==null){\n        this.setState({isUserActive : true});\n      }\n      console.log(this.props);\n    }\n\n    logout = ()=> {\n      localStorage.clear();\n      this.setState({isUserActive : false});\n    }\n\n    loginUser = ()=> {\n      this.setState({isUserActive : true});\n    }\n    render(){\n        return(\n            <div className=\"section container-fluid\">\n                <Router>\n                <div className=\"section-aside\">\n                    <ul>\n                        <Link to=\"/MusicHuntPro\">\n                            <li className=\"active\">\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Home</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-home\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntPro/album\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Albums</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                      {/*  <Link to=\"/MusicHuntPro/song\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Songs</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>*/}\n                        {/*<Link to=\"/MusicHuntPro/recent\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Recent</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-history\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>*/}\n                        <Link to=\"/MusicHuntPro/favourites\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Favourites</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntPro/profile\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Profile</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-user-o\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                            <li>\n                                <div className=\"row\" onClick={this.logout}>\n                                    <div className=\"mr-auto\">\n                                    {this.state.isUserActive ?\n                                      <div onClick={this.logout}>Logout</div>:\n                                      <div data-toggle=\"modal\" data-target=\"#myModal\" onClick={this.loginUser}>Login</div>}</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                    </ul>\n                </div>\n                <div className=\"section-content\">\n                    <div className=\"section-content-album\">\n                    <Switch>\n                        <Redirect exact from=\"/\" to=\"/MusicHuntPro\"/>\n                        <Route exact path=\"/MusicHuntPro\" render={()=><Home/>}/>\n                        <Route exact path=\"/MusicHuntPro/album\" render = {()=><Album title=\"Albums\"/>}/>\n                        <Route exact path=\"/MusicHuntPro/song\" render = {()=><Songs/>}/>\n                        <Route path=\"/MusicHuntPro/allcards\" render={()=><AllCards/>}/>\n                        {/*<Route exact path=\"/MusicHuntPro/recent\" render = {()=><Recent/>}/>*/}\n                        <Route exact path=\"/MusicHuntPro/favourites\" render = {()=><Favourite />}/>\n                        <Route exact path=\"/MusicHuntPro/profile\" render = {()=><Profile />}/>\n                    </Switch>\n                    </div>\n                </div>\n                </Router>\n                {/*<Draggable\n                  handle=\".handle\"\n                  defaultPosition={{x: 0, y: 0}}\n                  position={null}\n                  grid={[25, 25]}\n                  scale={1}\n                  onStart={this.handleStart}\n                  onDrag={this.handleDrag}\n                  onStop={this.handleStop}>\n                <div className=\"play-music-main fixed-bottom handle\">\n                  <div className=\"container\">\n                      <div>\n                        <div>Drag from here</div>\n                      </div>\n                  </div>\n                </div>\n                </Draggable>*/}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n  return{\n    musicPlayListReducer : state.musicPlayListReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    setCurrent : (val) => {\n      dispatch({\n          type : 'SET_CURRENT',\n          payload : val\n      });\n    },\n    setPlayList : (playList) => {\n      dispatch({\n        type : 'SET_PLAYLIST',\n        payload : playList\n      })\n    }\n  }\n}\nconnect(mapStateToProps,mapDispatchToProps)(Section);\nexport default Section;\n","import React , { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport './App.css';\nimport ReactJkMusicPlayer from \"react-jinke-music-player\";\nimport \"react-jinke-music-player/assets/index.css\";\nimport MainContent from './Main/MainContent';\nimport Section from './Components/Section/Section';\nimport b64toBlob from 'b64-to-blob';\nimport { connect } from 'react-redux';\nimport {\n    BrowserRouter as Router\n  } from 'react-router-dom';\n\nimport logo from './Images/logo.png';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isUserActive : false,\n      userName : \"\",\n      audioLists : [],\n      autoPlay : false,\n      profile_img : \"\"\n    }\n  }\n\n  componentDidMount = ()=> {\n      if(localStorage.getItem(\"musicHunt\")!==undefined && localStorage.getItem(\"musicHunt\")!==null){\n        let contentType = 'image/jpg';\n        let b64Data = localStorage.getItem(\"musicHuntUserProfile\");\n        if(localStorage.getItem(\"musicHuntUserProfile\")!==\"undefined\" && localStorage.getItem(\"musicHuntUserProfile\")!==null){\n          let blob = b64toBlob(b64Data, contentType);\n          let blobUrl = URL.createObjectURL(blob);\n          this.setState({isUserActive : true, userName : localStorage.getItem(\"musicHuntUser\"), profile_img :blobUrl});\n        }\n      }\n      toast.configure({\n        autoClose: 1000,\n      });\n      console.log(this.props.musicPlayListReducer.audioLists);\n  }\n\n  onAudioListsChange = (currentPlayId, audioLists, audioInfo) => {\n    // let playListCopy = this.props.musicPlayListReducer.audioLists;\n    // console.log(playListCopy);\n    // let count = playListCopy.filter(function(val, index, err){\n    //     return val.name===\n    // })\n    // this.props.setPlayList(audioLists);\n  }\n  render(){\n    return (\n      <div className=\"App\">\n      <ToastContainer autoClose={1500}/>\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark fixed-top\">\n          <img src={logo} alt=\"Music Hunt\" className=\"nav-img\"/>\n          <a className=\"navbar-brand\" href=\"/\"><h3>Music Hunt</h3></a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n          {this.state.isUserActive}\n          {this.state.isUserActive  ?\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/\">\n                {this.state.profile_img===\"\" ?\n                  <span className=\"fa fa-user-circle-o\"></span>:\n                  <img src={this.state.profile_img} className=\"navbar-image\" alt=\"profile\"/>\n               }\n                </a>\n              </li>\n            </ul>:\"\"}\n          </div>\n        </nav>\n        <div className=\"section-content-main\">\n          <Section/>\n          <Router>\n            <MainContent/>\n          </Router>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n          { this.props.musicPlayListReducer.audioLists.length >0 || this.props.musicPlayListReducer.songsList.length >0?\n              this.props.musicPlayListReducer.isSongs ?\n                  <ReactJkMusicPlayer onAudioListsChange={this.onAudioListsChange} panelTitle=\"Songs\" playIndex={this.props.musicPlayListReducer.songsList.length-1} audioLists={this.props.musicPlayListReducer.songsList} defaultPosition={{top:600,left:100}} draggable={true} bounds= \"\" autoPlay={true}/>:\n              <ReactJkMusicPlayer audioLists={this.props.musicPlayListReducer.audioLists} defaultPosition={{top:600,left:100}} draggable={true} bounds= \"\" autoPlay={false}/>:\"\"\n          }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    musicPlayListReducer : state.musicPlayListReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    setCurrent : (val) => {\n      dispatch({\n          type : 'SET_CURRENT',\n          payload : val\n      });\n    },\n    setPlayList : (playList) => {\n      dispatch({\n        type : 'SET_PLAYLIST',\n        payload : playList\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore , combineReducers, applyMiddleware} from 'redux';\nimport { Provider } from 'react-redux';\n\nconst musicPlayListReducer = (state={\n  audioLists : [],\n  currentPlaying : 0,\n  lastPlayed : 0,\n  defaultPlayIndex : 0,\n  songsList : [],\n  playIndex : 0,\n  isUserActive : false\n}, action) => {\n    switch(action.type){\n        case 'SET_CURRENT':\n          state = {\n            ...state,\n            currentPlaying : action.payload\n          }\n          break;\n        case 'SET_PLAYLIST':\n          state = {\n            ...state,\n            audioLists : [...state.audioLists,action.payload],\n            isSongs : false\n          }\n          break;\n        case 'SET_LAST_PLAYED':\n          state = {\n            ...state,\n            lastPlayed : action.payload\n          }\n          break;\n        case 'SET_SONGSLIST':\n          state = {\n            ...state,\n            songsList : [...state.songsList, action.payload],\n            isSongs : true\n          }\n          break;\n        case 'SET_USER_ACTIVE':\n          state = {\n            ...state,\n            isSongs : action.payload\n          }\n         break;\n        default :\n          break;\n    }\n    return state;\n}\n\n\nconst myLogger = (state) => (next) => (action) => {\n  console.log(\"Logged Action\", action);\n  next(action);\n}\nconst store = createStore(combineReducers({musicPlayListReducer}), {}, applyMiddleware(myLogger));\n\nstore.subscribe(() => {\n  console.log(\"Updated Store\" , store.getState());\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}