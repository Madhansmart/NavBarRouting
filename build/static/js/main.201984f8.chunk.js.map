{"version":3,"sources":["Images/logo.png","Images/song1.mp3","Images/ko.jpg","Main/UserFunctions.js","Components/Section/Section.js","Main/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","localhost","login","userLogin","axios","post","userName","password","then","response","console","log","undefined","data","error","localStorage","setItem","catch","err","getAllTracks","val","get","params","albumId","body","register","user","firstName","lastName","email","Home","react_default","a","createElement","className","Section_Album","Section_Recent","Section_Favourite","Component","Album","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createAlbumActive","setState","isAlbumCreate","createAlbum","albumObj","albumCopy","state","albumData","slice","count","i","length","title","albumName","obj","albumImg","description","albumDesc","songs","push","setAlbumTitle","index","albumTitle","album_title","currentCard","position","cardStyle","transform","width","isDataAlive","_this2","dataset","toast","POSITION","TOP_RIGHT","document","getElementById","clientWidth","type","margin","window","getComputedStyle","marginRight","JSON","parse","replace","cardWidth","cardMargin","cardNumber","setCard","concat","_this3","createShown","display","mainPageShown","Section_CreateAlbum","style","react_router_dom","to","onClick","handleClick","Section_Card","CreateAlbum","_this4","updateAlbumDetails","e","defineProperty","target","name","value","htmlFor","id","placeholder","onChange","autoComplete","required","dist_default","accepts","multiple","maxFiles","maxFileSize","minFileSize","clickable","bind","Card","_this5","componentDidMount","$","click","event","includes","getTracks","album_id","tracksData","isSongsShown","_this6","albumcardStyle","flexWrap","location","href","cardData","Section_Songs","map","key","src","album_image_file","alt","album_tracks","Songs","_this7","songsData","song","Section_MusicPlayer","songData","AllCards","Favourite","Recent","MusicPlayer","_this8","songControls","option","songSrc","play","volume","isPlaying","pause","setVolume","vol","setFav","fav","isFavourite","timeUpdate","setInterval","currentTime","totalTime","isMuted","Audio","track_url","track_title","aria-hidden","track_duration","Profile","Section","_this9","getItem","isUserActive","logout","clear","react_router","exact","from","path","render","Section_Home","Section_AllCards","Section_Profile","MainContent","toggleActive","isLogin","userRegister","preventDefault","res","status","success","updateValue","userDet","notifyError","demovar","activeLogStyle","background","color","registerLogStyle","st","onSubmit","App","configure","autoClose","react_toastify","logo","data-toggle","data-target","Components_Section_Section","src_Main_MainContent","Boolean","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.201984f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.806430aa.png\";","module.exports = __webpack_public_path__ + \"static/media/song1.2b07eae0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ko.ed130e8f.jpg\";","import axios from 'axios'\nconst localhost = \"http://localhost:5000\";\n//\n// const MongoClient = require('mongodb').MongoClient;\n// const uri = \"mongodb+srv://codingmart42:<password>@musichunt01-4ybzp.mongodb.net/test?retryWrites=true&w=majority\";\n// const client = new MongoClient(uri, { useNewUrlParser: true });\n// client.connect(err => {\n//   const collection = client.db(\"test\").collection(\"devices\");\n//   // perform actions on the collection object\n//   client.close();\n// });\n\n\nexport const login = (userLogin) => {\n  return axios.post(localhost+'/users/login',{\n      userName : userLogin.userName,\n      password : userLogin.password\n  }).then(response => {\n    console.log(response);\n      if(response.data!==undefined){\n        if(response.data.error===undefined){\n            localStorage.setItem(\"musicHunt\", response.data);\n        }\n      }\n      return response.data\n  }).catch(err=>{\n      return err\n  })\n}\n\nexport const albumsList = ()=>{\n  return axios.get(localhost+'/allAlbums').then(response=>{\n      if(response.data.body===undefined || response.data.body===null){\n        return \"Server Down\"\n      }\n      else{\n        return response.data.body;\n      }\n  })\n}\n\nexport const getAllTracks = (val)=> {\n  return axios.get(localhost + '/getAllTracks',{\n    params: {\n      albumId : val\n    }\n  }).then(response => {\n      if(response.data.body===undefined || response.data.body===null){\n        return \"Server Down\"\n      }\n      else{\n        return response.data.body;\n      }\n  })\n}\n\nexport const register = (user) => {\n  return axios.post(localhost+'/users/register', {\n    firstName : user.firstName,\n    lastName : user.lastName,\n    userName  : user.userName,\n    email : user.email,\n    password : user.password\n  }).then((response)=>{\n     return response\n  })\n}\n\n\n//\n// export const albums = ()=> {\n//   return axios.get(\"https://musichunt-699ba.firebaseio.com/albums.json\").then((response)=>{\n//       return response;\n//   })\n// }\n//\n// export const putAlbums = (data)=> {\n//   return axios.put(\"https://musichunt-699ba.firebaseio.com/albums.json\",data).then((response)=>{\n//       return response;\n//   })\n// }\n\n// export const getTracks = ()=> {\n//   return axios.get(\"http://localhost:5000/allTracks\").then((response)=>{\n//     return response.data.name.body.dataset;\n//   })\n// }\n","import React , {Component} from 'react';\nimport './Section.css';\nimport $ from 'jquery';\nimport mp3Src from '../../Images/song1.mp3';\nimport { getTracks } from '../../Main/UserFunctions';\nimport { albumsList } from '../../Main/UserFunctions';\nimport { getAllTracks } from '../../Main/UserFunctions';\nimport { toast } from 'react-toastify';\n\nimport Draggable, {DraggableCore} from 'react-draggable';\nimport Files from 'react-files'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Link,\n    Redirect\n  } from 'react-router-dom';\n\nimport MainContent from '../../Main/MainContent';\n\nimport imgSrc from '../../Images/ko.jpg';\n\nclass Home extends Component{\n    render(){\n        return(\n            <div className=\"home\">\n                <Album/>\n                <Recent/>\n                <Favourite/>\n            </div>\n        )\n    }\n}\n\nclass Album extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          currentCard: 0,\n          position: 0,\n          cardStyle: {\n            transform: 'translateX(0px)'\n          },\n          width: 0,\n          albumData : [],\n          isAlbumCreate : false,\n          isDataAlive : false,\n          albumTitle  : \"Albums\"\n        };\n      }\n\n      componentDidMount() {\n        albumsList().then(response => {\n          console.log(response);\n          if(response.dataset===undefined){\n            toast.error(\"Server Unavailable\", {\n                position: toast.POSITION.TOP_RIGHT\n            });\n          }\n          else{\n            this.setState({albumData : response.dataset, isDataAlive : true});\n            if(document.getElementById(\"card\") !== null){\n              let boxWidth = document.getElementById(\"card\").clientWidth;\n            }\n          }\n        })\n      }\n\n      // func: click the slider buttons\n      handleClick(type) {\n        // get the card's margin-right\n        let margin = window.getComputedStyle(document.getElementById(\"card\")).marginRight;\n        margin = JSON.parse(margin.replace(/px/i, ''));\n        const cardWidth = this.state.width;\n        const cardMargin = margin;\n        const cardNumber = this.state.albumData.length;\n        let currentCard = this.state.currentCard;\n        let position = this.state.position;\n        console.log(cardMargin, cardNumber);\n        // slide cards\n        if(type === 'next' && currentCard < cardNumber-1) {\n          currentCard++;\n          position -= (cardWidth+cardMargin);\n        } else if(type === 'prev' && currentCard > 0) {\n          currentCard--;\n          position += (cardWidth+cardMargin);\n        }\n        this.setCard(currentCard, position);\n      }\n\n      setCard(currentCard, position) {\n        this.setState({\n          currentCard: currentCard,\n          position: position,\n          cardStyle: {\n            transform: `translateX(${position}px)`\n          }\n        })\n      }\n\n      createAlbumActive = ()=>{\n          this.setState({isAlbumCreate : true});\n      }\n\n      createAlbum = (albumObj)=> {\n        let albumCopy = this.state.albumData.slice();\n        let count = 0;\n        for(let i=0; i<albumCopy.length; i++){\n            if(albumCopy[i].title === albumObj.albumName){\n              count++;\n            }\n        }\n        if(count)\n        var obj = {\n          albumImg : \"\",\n          description : albumObj.albumDesc,\n          songs : [],\n          title : albumObj.albumName\n        }\n        albumCopy.push(obj);\n        // putAlbums(albumCopy).then(()=>{\n            this.setState({albumData : albumCopy, isAlbumCreate : false});\n        // })\n      }\n      setAlbumTitle = (index) => {\n          this.setState({albumTitle : this.state.albumData[index].album_title});\n      }\n\n    render(){\n        let createShown = {\n          display : this.props.albumTitle ===\"Albums\"?\"block\":\"none\"\n        }\n        let mainPageShown = {\n          display : this.state.isDataAlive ? \"block\" : \"none\"\n        }\n        if(!this.state.isAlbumCreate){\n            return(\n                <div className=\"album container-fluid\" style={mainPageShown}>\n                    <div className=\"cards-slider row\">\n                        <div className=\"col-md-9\"><h3><Link to=\"/\">Albums</Link>{this.state.albumTitle!==\"Albums\"?<span>&nbsp;&#x3e;&nbsp;{this.state.albumTitle}</span>:\"\"}</h3></div>\n                          <div className=\"btn btn-success create-albm-btn\" style={createShown} onClick={this.createAlbumActive}>Create Album</div>\n                          <div className=\"ml-auto\">\n                            <div className=\"row\">\n                                <div className=\"arrow-btn\">\n                                    <div className=\"btn btn-sm btn-outline-secondary btn-arrow-left\" onClick={() => this.handleClick('prev')}><span>&lt;</span></div>\n                                </div>\n                                <div className=\"col-md-1 arrow-btn\">\n                                    <div className=\"btn btn-sm btn-outline-secondary btn-arrow-right\" onClick={() => this.handleClick('next')}><span>&gt;</span></div>\n                                </div>\n                            </div>\n                          </div>\n                    </div>\n                    <hr className=\"album-hr\"/>\n                    <div className=\"album-content\">\n                        <Card cardStyle={this.state.cardStyle} albumData={this.state.albumData} albumTitle={this.setAlbumTitle}/>\n                    </div>\n                </div>\n            )\n          }\n          else{\n            return <CreateAlbum createAlbum={this.createAlbum}/>\n          }\n    }\n}\n\nclass CreateAlbum extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      albumName : \"\",\n      albumDesc : \"\",\n      albumImg : \"\",\n      songs : []\n    }\n  }\n\n  updateAlbumDetails = (e)=>{\n    this.setState({[e.target.name] : e.target.value});\n  }\n  render(){\n    return(\n      <div className=\"create-album-main container\">\n      <h2>Create Your Album </h2>\n      <hr/>\n        <div className=\"row\">\n              <div className=\"col\">\n                <form>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <label htmlFor=\"abmName\">Name</label>\n                            <input type=\"text\" className=\"form-control ml-auto\" id=\"abmName\" placeholder=\"Enter Album Name\" onChange={this.updateAlbumDetails} name=\"albumName\" autoComplete=\"current-username\" required />\n                        </div>\n                        <div className=\"col ml-auto\">\n                            <label htmlFor=\"abmDesc\">Description</label>\n                            <input type=\"text\" className=\"form-control ml-auto\" id=\"abmName\" placeholder=\"Enter Album Name\" onChange={this.updateAlbumDetails} name=\"albumDesc\" autoComplete=\"current-username\" required />\n                        </div>\n                    </div>\n                    <div className=\"form-group text-center create-abm-upload\">\n                        <Files\n                            className='files-dropzone album-img-upload btn btn-primary btn-sm'\n                            // onChange={this.onFilesChange}\n                            // onError={this.onFilesError}\n                            accepts={['image/*']}\n                            multiple\n                            maxFiles={10}\n                            maxFileSize={10000000}\n                            minFileSize={0}\n                            clickable\n                        >\n                            Upload Album Cover\n                        </Files>\n                      </div>\n                      <div className=\"form-group text-center create-abm-upload\">\n                          <Files\n                              className='files-dropzone album-songs-upload btn btn-primary btn-sm'\n                              // onChange={this.onFilesChange}\n                              // onError={this.onFilesError}\n                              accepts={['audio/*']}\n                              multiple\n                              maxFiles={10}\n                              maxFileSize={10000000}\n                              minFileSize={0}\n                              clickable\n                          >\n                              Upload Songs\n                          </Files>\n                      </div>\n                      <div className=\"btn btn-sm btn-outline-success\" onClick={this.props.createAlbum.bind(this,this.state)}>Create</div>\n                </form>\n            </div>\n            <div className=\"col\">\n                uploaded image and songs will display here\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Card extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n          tracksData : [],\n          isSongsShown : false\n        }\n    }\n   componentDidMount = ()=>{\n      $(\".add-favourite\").click(function(event){\n          if(event.target.className.includes(\"fa-heart-o\")){\n            event.target.className = \"fa fa-heart add-favourite\"\n          }\n          else{\n            event.target.className = \"fa fa-heart-o add-favourite\"\n          }\n      })\n    }\n\n    getTracks = (index)=>{\n        getAllTracks(this.props.albumData[index].album_id).then(response => {\n              if(response.dataset===undefined){\n                toast.error(\"Server Unavailable\", {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n              }\n              else{\n                this.props.albumTitle(index);\n                this.setState({tracksData : response.dataset,isSongsShown : true});\n              }\n        })\n    }\n\n    render(){\n      let albumcardStyle = {\n        flexWrap: window.location.href.includes(\"album\") ? \"none\"  :\"nowrap\",\n      }\n        const cardData = this.props.albumData;\n        if(this.state.isSongsShown){\n          return (\n            <Songs tracksData = {this.state.tracksData}/>\n          )\n        }\n        else{\n            return(\n                <div className=\"album-card text-center row\" style={albumcardStyle}>\n                 {cardData.map((val, index)=>{\n                     return(\n                        <div className=\"card col-md-3\" id=\"card\" style={this.props.cardStyle} key={index} onClick={this.getTracks.bind(this,index)}>\n                            <img src={val.album_image_file} className=\"card-img-top mx-auto img-thumbnail\" alt=\"...\"/>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{val.album_title}</h5>\n                                <p className=\"card-text\"></p>\n                                <span>{val.album_tracks} songs</span>\n                                <i className=\"fa fa-heart-o add-favourite\" title=\"Add to favourite\"></i>\n                            </div>\n                        </div>\n                     )\n                   })}\n                 </div>\n            )\n          }\n        }\n}\n\nclass Songs extends Component{\n  constructor(props){\n      super();\n      this.state = {\n          songsData : []\n      }\n  }\n  componentDidMount = ()=> {\n    if(this.props.tracksData===undefined){\n\n    }\n    else{\n      this.setState({songsData : this.props.tracksData});\n    }\n  }\n  render(){\n    return(\n      <div className=\"song-content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h4>SONGS</h4>\n            </div>\n            <div className=\"col-md-2 mr-auto\">\n              <h5>{this.state.songsData.length} Songs</h5>\n            </div>\n          </div>\n          <hr/>\n          <div className=\"row text-center song-header\">\n            <div className=\"col\"></div>\n            <div className=\"col\">Song</div>\n            <div className=\"col\">Album</div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n          </div>\n          <div className=\"row\">\n          <div className=\"col-md-3 ml-auto\">\n\n          </div>\n            <div className=\"col-md-9\">\n              {this.state.songsData.map((song, index)=>{\n                  return(\n                      <MusicPlayer songData={song} index={index} key={index}/>\n                  )\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AllCards extends Component{\n    render(){\n        return(\n            <div className=\"allCards\"></div>\n        )\n    }\n}\n\nclass Favourite extends Component{\n    render(){\n        return(\n            <div className=\"favourites\">\n                Favourite\n            </div>\n        )\n    }\n}\n\nclass Recent extends Component{\n    render(){\n        return(\n            <div className=\"recent\">\n                <Album/>\n            </div>\n        )\n    }\n}\n\nclass MusicPlayer extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isPlaying : true,\n      currentTime : \"00:00\",\n      totalTime : \"00:00\",\n      isMuted : false,\n      isFavourite : false,\n      volume : \"1\",\n      songSrc : new Audio(this.props.songData.track_url+\"/download\")\n    }\n  }\n\n  componentDidMount = ()=>{\n    console.log(this.props.songData);\n  }\n  songControls = (option)=> {\n    console.log(\"playing\");\n    let song = this.state.songSrc;\n    switch(option){\n        case \"play\" :\n          song.play();\n          song.volume = this.state.volume;\n          this.setState({isPlaying : false});\n          break;\n        case \"pause\":\n          song.pause();\n          this.setState({isPlaying : true});\n          break;\n        case \"fav\":\n          break;\n        case \"unfav\":\n        default :\n    }\n  }\n\n  setVolume = (vol)=> {\n      let song = this.state.songSrc;\n      song.volume = vol;\n      this.setState({volume : vol});\n  }\n  setFav = (fav)=> {\n      if(fav===\"fav\"){\n        this.setState({isFavourite : true});\n      }\n      else{\n          this.setState({isFavourite : false});\n      }\n  }\n  timeUpdate = ()=>{\n      setInterval(()=>{\n          if(this.currentTime < this.totalTime){\n            this.setState({currentTime : this.state.currentTime+1});\n          }\n      },1000)\n  }\n  render(){\n    return(\n      <div className=\"row music-player\">\n        {/*<div className=\"col\"><img className=\"music-img\" src={this.props.songData.track_image_file} alt=\"img\"/></div>*/}\n        <div className=\"col\">{this.props.songData.track_title}</div>\n        <div className=\"col\">{this.props.songData.album_title}</div>\n          {this.state.isPlaying ?\n            <div className=\"col\" onClick={this.songControls.bind(this,\"play\")}>\n              <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\n            </div>:\n            <div className=\"col\" onClick={this.songControls.bind(this,\"pause\")}>\n              <i className=\"fa fa-pause\" aria-hidden=\"true\"></i>\n            </div>\n           }\n        <div className=\"col\">{this.state.currentTime}/{this.props.songData.track_duration}</div>\n        {\n          this.state.volume === \"0\"?\n              <div className=\"col\" onClick={this.setVolume.bind(this,\"0.2\")}>\n                <span>\n                  <i className=\"fa fa-volume-off\"></i>\n                  <i className=\"fa fa-ban\"></i>\n                </span>\n              </div>:\n                this.state.volume === \"0.2\" ?\n                    <div className=\"col\" onClick={this.setVolume.bind(this,\"0.6\")}><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i></div>:\n                      this.state.volume === \"0.6\"?\n                            <div className=\"col\" onClick={this.setVolume.bind(this,\"1\")}><i className=\"fa fa-volume-down\" aria-hidden=\"true\"></i></div>:\n                                <div className=\"col\" onClick={this.setVolume.bind(this,\"0\")}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></div>\n            }\n        {this.state.isFavourite ?\n          <div className=\"col\" onClick={this.setFav.bind(this,\"unfav\")}><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></div>:\n          <div className=\"col\" onClick={this.setFav.bind(this,\"fav\")}><i className=\"fa fa-heart-o\" aria-hidden=\"true\"></i></div>}\n      </div>\n    )\n  }\n}\n\nclass Profile extends Component{\n    render(){\n        return(\n            <div className=\"profile\">Profile</div>\n        )\n    }\n}\n\nclass Section extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isUserActive : false\n        }\n    }\n\n    componentDidMount = ()=> {\n      if(localStorage.getItem(\"musicHunt\") !==null){\n        this.setState({isUserActive : true});\n      }\n    }\n\n    logout = ()=> {\n      localStorage.clear();\n      this.setState({isUserActive : false});\n    }\n    render(){\n        return(\n            <div className=\"section container-fluid\">\n                <Router>\n                <div className=\"section-aside\">\n                    <ul>\n                        <Link to=\"/MusicHuntPro\">\n                            <li className=\"active\">\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Home</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-home\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntPro/album\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Albums</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntPro/song\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Songs</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntPro/recent\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Recent</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-history\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntPro/favourites\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Favourites</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntPro/profile\">\n                            <li>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Profile</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-user-o\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                            <li>\n                                <div className=\"row\" onClick={this.logout}>\n                                    <div className=\"mr-auto\">\n                                    {this.state.isUserActive ? \"Logout\":  \"Login\"}</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                    </ul>\n                </div>\n                <div className=\"section-content\">\n                    <div className=\"section-content-album\">\n                    <Switch>\n                        <Redirect exact from=\"/\" to=\"/MusicHuntPro\"/>\n                        <Route exact path=\"/MusicHuntPro\" render={()=><Home/>}/>\n                        <Route exact path=\"/MusicHuntPro/album\" render = {()=><Album title=\"Albums\"/>}/>\n                        <Route exact path=\"/MusicHuntPro/song\" render = {()=><Songs/>}/>\n                        <Route path=\"/MusicHuntPro/allcards\" render={()=><AllCards/>}/>\n                        <Route exact path=\"/MusicHuntPro/recent\" render = {()=><Recent/>}/>\n                        <Route exact path=\"/MusicHuntPro/favourites\" render = {()=><Favourite />}/>\n                        <Route exact path=\"/MusicHuntPro/profile\" render = {()=><Profile />}/>\n                    </Switch>\n                    </div>\n                </div>\n                </Router>\n                {/*<Draggable\n                  handle=\".handle\"\n                  defaultPosition={{x: 0, y: 0}}\n                  position={null}\n                  grid={[25, 25]}\n                  scale={1}\n                  onStart={this.handleStart}\n                  onDrag={this.handleDrag}\n                  onStop={this.handleStop}>\n                <div className=\"play-music-main fixed-bottom handle\">\n                  <div className=\"container\">\n                      <div>\n                        <div>Drag from here</div>\n                      </div>\n                  </div>\n                </div>\n                </Draggable>*/}\n            </div>\n        )\n    }\n}\n\nexport default Section;\n","import React , { Component } from 'react';\nimport './MainContent.css'\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { login } from './UserFunctions'\nimport {register} from './UserFunctions';\nimport { toast } from 'react-toastify';\nimport Section from '../Components/Section/Section'\n\nimport $ from 'jquery';\n\n\nclass MainContent extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isUserActive : false,\n      isLogin : true,\n      firstName : \"\",\n      lastName : \"\",\n      userName : \"\",\n      password : \"\",\n      email : \"\",\n      demovar : false\n    }\n  }\n\n  toggleActive = (val)=> {\n    if(val === \"login\"){\n      this.setState({isLogin : true});\n    }\n    else{\n      this.setState({isLogin : false});\n    }\n  }\n\n\n  userRegister = (e)=> {\n      e.preventDefault();\n      const user = {\n        firstName : this.state.firstName,\n        lastName : this.state.lastName,\n        userName : this.state.userName,\n        email : this.state.email,\n        password : this.state.password\n      }\n\n      register(user).then((res)=> {\n        if(res.data.error!==undefined){\n          toast.error(\"Username Already Exists\", {\n              position: toast.POSITION.TOP_RIGHT\n          });\n        }\n        if(res.data.status!==undefined){\n            toast.success(\"Registered Successfully Login To Continue\", {\n                position: toast.POSITION.TOP_RIGHT\n            });\n            this.setState({isLogin : true});\n        }\n      })\n  }\n\n  updateValue = (e)=> {\n    this.setState({[e.target.name] : e.target.value});\n  }\n\n  userLogin = (e)=>{\n    e.preventDefault();\n\n    const userDet = {\n      userName : this.state.userName,\n      password : this.state.password\n    }\n\n    login(userDet).then(res => {\n      if(res===undefined){\n        this.notifyError();\n      }\n      else if(res.error!==undefined){\n        toast.error(res.error, {\n            position: toast.POSITION.TOP_RIGHT\n        });\n      }\n      else{\n        this.setState({isUserActive : true, demovar : true});\n      }\n    })\n\n  }\n\n  notifyError = ()=> {\n    toast.error(\"Invalid Login\", {\n        position: toast.POSITION.TOP_RIGHT\n    });\n  }\n  render(){\n      let activeLogStyle = {\n        background : this.state.isLogin ? \"#777\" : \"\",\n        color : this.state.isLogin ? \"white\" : \"black\"\n      }\n      let registerLogStyle = {\n        background : this.state.isLogin? \"\" : \"#777\",\n        color : this.state.isLogin ? \"black\" : \"white\"\n      }\n      let st = {\n        display : this.state.demovar ? \"none\" : \"\"\n      }\n        return(\n          <div className=\"app-main\">\n          <div className=\"modal\" id=\"myModal\" style={st}>\n              <div className=\"modal-dialog modal-dialog-centered\">\n                  <div className=\"modal-content\">\n                      <div className=\"modal-body\">\n                      <div className=\"container-fluid\">\n                        <div className=\"mx-auto\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-12\">\n                                     <div className=\"row text-center log-reg-btn\">\n                                         <div className=\"col\" onClick={()=>{this.toggleActive('login')}} style={activeLogStyle}>\n                                           Login\n                                         </div>\n                                         <div className=\"col\" onClick={()=>{this.toggleActive('register')}} style={registerLogStyle}>\n                                           SignUp\n                                         </div>\n                                     </div>\n                                     <hr/>\n                                   </div>\n                                   {this.state.isLogin ?\n                                     <div className=\"login-main mx-auto\">\n                                       <form onSubmit={this.userLogin}>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"uname\">Username</label>\n                                                 <input type=\"text\" className=\"form-control\" id=\"uname\" placeholder=\"Enter username\" onChange={this.updateValue} name=\"userName\" autoComplete=\"current-username\" required />\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"pwd\">Password</label>\n                                                 <input type=\"password\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" onChange={this.updateValue} name=\"password\" autoComplete=\"new-password\" required />\n                                             </div>\n                                             <div className=\"form-group form-check form-inline\">\n                                                 <label className=\"form-check-label\">\n                                                   <input className=\"form-check-input\" type=\"checkbox\" name=\"remember\"/> Lazy to remember password\n                                                 </label>\n                                             </div>\n                                             <div className=\"form-group text-center\">\n                                               <button type=\"submit\" className=\"btn btn-primary\">LOGIN</button>\n                                             </div>\n                                       </form>\n                                     </div>:\n                                     <div className=\"signup-main mx-auto\">\n                                       <form onSubmit={this.userRegister}>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"fname\">First Name</label>\n                                                 <input type=\"text\" className=\"form-control ml-auto\" id=\"fname\" placeholder=\"Enter FirstName\" onChange={this.updateValue} name=\"firstName\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"lname\">LastName</label>\n                                                 <input type=\"text\" className=\"form-control ml-auto\" id=\"lname\" placeholder=\"Enter LastName\" onChange={this.updateValue} name=\"lastName\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"uname\">Username</label>\n                                                 <input type=\"text\" className=\"form-control ml-auto\" id=\"uname\" placeholder=\"Enter username\" onChange={this.updateValue} name=\"userName\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"email\">Email</label>\n                                                 <input type=\"email\" className=\"form-control ml-auto\" id=\"email\" placeholder=\"Enter Email\" onChange={this.updateValue} name=\"email\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"pwd\">Password</label>\n                                                 <input type=\"password\" className=\"form-control ml-auto\" id=\"pwd\" placeholder=\"Enter password\" onChange={this.updateValue} name=\"password\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"rpwd\">Confirm Password</label>\n                                                 <input type=\"password\" className=\"form-control ml-auto\" id=\"rpwd\" placeholder=\"Re enter password\" name=\"pswd\" required/>\n                                             </div>\n                                             <div className=\"form-group form-check form-inline\">\n                                                 <label className=\"form-check-label\">\n                                                   <input className=\"form-check-input\" type=\"checkbox\" name=\"remember\"/> Lazy to remember password\n                                                 </label>\n                                             </div>\n                                             <div className=\"form-group text-center\">\n                                               <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                                             </div>\n                                       </form>\n                                     </div>\n                                   }\n                              </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n          </div>\n        )\n  }\n}\n\nexport default MainContent;\n","import React , { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport './App.css';\n\nimport MainContent from './Main/MainContent';\nimport Section from './Components/Section/Section';\n\nimport {\n    BrowserRouter as Router\n  } from 'react-router-dom';\n\nimport logo from './Images/logo.png';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isUserActive : false,\n      userName : \"\"\n    }\n  }\n\n  componentDidMount = ()=> {\n      if(localStorage.getItem(\"musicHunt\")!==undefined){\n        this.setState({isUserActive : true, userName : localStorage.getItem(\"musicHunt\")});\n      }\n      toast.configure({\n        autoClose: 1000,\n      });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n      <ToastContainer autoClose={1500}/>\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark fixed-top\">\n          <img src={logo} alt=\"Music Hunt\" className=\"nav-img\"/>\n          <a className=\"navbar-brand\" href=\"/\"><h3>Music Hunt</h3></a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/\" data-toggle=\"modal\" data-target=\"#myModal\">\n                <i className=\"fa fa-user-circle-o\"></i></a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        <div className=\"section-content-main\">\n          <Section/>\n          <Router>\n            <MainContent/>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}